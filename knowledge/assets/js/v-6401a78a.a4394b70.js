"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[3327],{1712:(e,l,i)=>{i.r(l),i.d(l,{data:()=>a});const a={key:"v-6401a78a",path:"/web-developer/back-end/node/",title:"Node",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"知识点",slug:"知识点",children:[]},{level:2,title:"概念",slug:"概念",children:[{level:3,title:"Node 是什么？",slug:"node-是什么",children:[]},{level:3,title:"为什么使用 Node",slug:"为什么使用-node",children:[]},{level:3,title:"Node.js 与 JavaScript 的区别",slug:"node-js-与-javascript-的区别",children:[]}]},{level:2,title:"V8 JavaScript 引擎",slug:"v8-javascript-引擎",children:[]},{level:2,title:"npm",slug:"npm",children:[]},{level:2,title:"debugger 调试",slug:"debugger-调试",children:[{level:3,title:"--inspect-brk",slug:"inspect-brk",children:[]}]},{level:2,title:"后端思维",slug:"后端思维",children:[]},{level:2,title:"案例",slug:"案例",children:[]}],filePathRelative:"web-developer/back-end/node/README.md",git:{updatedTime:1679291328e3,contributors:[{name:"licong96",email:"licong19961204@gmail.com",commits:6},{name:"黎聪",email:"licong23@xdf.cn",commits:3},{name:"licong23@xdf.cn",email:"licong23@xdf.cn",commits:1}]}}},7379:(e,l,i)=>{i.r(l),i.d(l,{default:()=>p});var a=i(6252);const r=(0,a.Wm)("h1",{id:"node",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#node","aria-hidden":"true"},"#"),(0,a.Uk)(" Node")],-1),d={href:"http://nodejs.cn/learn/",target:"_blank",rel:"noopener noreferrer"},n=(0,a.Uk)("官方文档"),t={href:"https://roadmap.sh/nodejs",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("学习路线"),s={href:"https://nodejs.dev/zh-cn/learn/",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("学习文档"),h=(0,a.uE)('<h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><ol><li>模块系统、CommonJS 规范、NPM 包管理器</li><li>异步编程、事件机制、事件循环</li><li>文件系统操作、路径处理、Stream 流操作</li><li>网络、API、HTTP 协议、WebSocket</li><li>数据库操作、缓存、MySQL、MongoDB</li><li>Node.js Web 框架</li><li>代码调试、单元测试、安全、性能优化</li><li>命令行工具和自动化构建</li></ol><p>难点：</p><ul><li>Node.js 模块路径解析流程</li><li>Node 多进程开发</li><li>环境变量，可以在多进程中共享</li></ul><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念" aria-hidden="true">#</a> 概念</h2><h3 id="node-是什么" tabindex="-1"><a class="header-anchor" href="#node-是什么" aria-hidden="true">#</a> Node 是什么？</h3><p>它是一个 javascript 的运行环境</p><h3 id="为什么使用-node" tabindex="-1"><a class="header-anchor" href="#为什么使用-node" aria-hidden="true">#</a> 为什么使用 Node</h3><ol><li>运行在本地，作为构建打包工具，辅助开发</li><li>运行在服务器，作为<code>web server</code>，后端开发</li><li>异步编程：Node.js 使用基于事件驱动的非阻塞 I/O 模型，可以实现高效的异步编程。这意味着 Node.js 可以处理大量并发请求，而不会阻塞进程，从而提高了应用程序的性能</li><li>轻量级和高效性，代码复用，模块化</li><li>Node.js 适用于构建现代应用程序，例如实时 Web 应用、RESTful API、单页应用程序和流式数据处理应用程序等</li></ol><h3 id="node-js-与-javascript-的区别" tabindex="-1"><a class="header-anchor" href="#node-js-与-javascript-的区别" aria-hidden="true">#</a> Node.js 与 JavaScript 的区别</h3><ul><li><p><strong>相同点</strong></p><ul><li>都使用了<code>ECMAScrip</code>定义的语法规范。</li></ul></li><li><p><strong>不同点</strong></p><ul><li>JavaScript = ECMAScrip + Web API，运行在浏览器</li><li>Node.js = ECMAScrip + Node.js API，运行在服务器，作为<code>web server</code></li><li>Node.js 可访问文件系统，JavaScript 不可以</li><li>Node.js 不需要使用 Babel 编译成低版本，可以直接使用最新的 ECMAScrip 标准</li><li>Node.js 同时支持 CommonJS 和 ES 模块系统</li></ul></li></ul><h2 id="v8-javascript-引擎" tabindex="-1"><a class="header-anchor" href="#v8-javascript-引擎" aria-hidden="true">#</a> V8 JavaScript 引擎</h2><p>V8 是为 Google Chrome 提供支持的 JavaScript 引擎的名称，它解析和执行 JavaScript 代码，DOM 和其他 Web 平台 API 则由浏览器提供。</p><p>随着 Node.js 的爆炸式增长，V8 成为现在支持大量用 JavaScript 编写的服务器端代码的引擎。</p><h2 id="npm" tabindex="-1"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h2><h2 id="debugger-调试" tabindex="-1"><a class="header-anchor" href="#debugger-调试" aria-hidden="true">#</a> debugger 调试</h2><p><strong>使用 VSCode</strong></p><ul><li>在运行调试中执行对应的<code>run script</code>命令，服务会被运行</li><li>在代码左侧添加红点</li></ul><h3 id="inspect-brk" tabindex="-1"><a class="header-anchor" href="#inspect-brk" aria-hidden="true">#</a> --inspect-brk</h3><p>在谷歌浏览器的 DevTools 中，连接 Node，开始调试</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>node --inspect-brk index.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="后端思维" tabindex="-1"><a class="header-anchor" href="#后端思维" aria-hidden="true">#</a> 后端思维</h2><ul><li>服务稳定性</li><li>考虑内存和 CPU（优化，扩展）</li><li>日志记录</li><li>安全</li><li>集群和服务拆分</li></ul><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2>',24),u=(0,a.Uk)("Web Blogs"),p={render:function(e,l){const i=(0,a.up)("OutboundLink"),p=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[r,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[(0,a.Wm)("a",d,[n,(0,a.Wm)(i)])]),(0,a.Wm)("li",null,[(0,a.Wm)("a",t,[o,(0,a.Wm)(i)])]),(0,a.Wm)("li",null,[(0,a.Wm)("a",s,[c,(0,a.Wm)(i)])])]),h,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[(0,a.Wm)(p,{to:"/web-developer/back-end/node/blogs.html"},{default:(0,a.w5)((()=>[u])),_:1})])])],64)}}}}]);