"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[7510],{2693:(e,r,o)=>{o.r(r),o.d(r,{data:()=>l});const l={key:"v-72a85482",path:"/computers-core/internet/Browsers.html",title:"浏览器",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"多进程（process）",slug:"多进程-process",children:[]},{level:2,title:"浏览器主进程 （Browser Process）",slug:"浏览器主进程-browser-process",children:[]},{level:2,title:"渲染进程 （Renderer Process）",slug:"渲染进程-renderer-process",children:[]},{level:2,title:"浏览器对事件的处理",slug:"浏览器对事件的处理",children:[]},{level:2,title:"参考资料",slug:"参考资料",children:[]}],filePathRelative:"computers-core/internet/Browsers.md",git:{updatedTime:1656560982e3,contributors:[{name:"licong96",email:"licong19961204@gmail.com",commits:1}]}}},9859:(e,r,o)=>{o.r(r),o.d(r,{default:()=>a});var l=o(6252);const c=(0,l.uE)('<h1 id="浏览器" tabindex="-1"><a class="header-anchor" href="#浏览器" aria-hidden="true">#</a> 浏览器</h1><p>计算机的核心是<code>CPU</code>，它承担了所有的计算任务。将<code>CPU</code>比作一个工厂，将<code>进程</code>比作一个车间，将<code>线程</code>比作一个工人。</p><h2 id="多进程-process" tabindex="-1"><a class="header-anchor" href="#多进程-process" aria-hidden="true">#</a> 多进程（process）</h2><ul><li>浏览器主进程 （Browser Process）</li><li>渲染进程 （Renderer Process）</li><li>GPU进程 （GPU Process）</li><li>插件进程 （Plugin Process）</li><li>网络进程</li></ul><blockquote><p>每个进程又有多个线程（thread）</p></blockquote><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>多进程，允许多个任务同时运行；</p><p>多线程，允许单个任务分成不同的部分运行；</p><p>提供协调机制，一方面防止进程之间和线程之间产生冲突，另一方面允许进程之间和线程之间共享资源。</p></div><h2 id="浏览器主进程-browser-process" tabindex="-1"><a class="header-anchor" href="#浏览器主进程-browser-process" aria-hidden="true">#</a> 浏览器主进程 （Browser Process）</h2><ul><li><p><strong>它负责什么？</strong></p><p>负责浏览器Tab外的工作，包括地址栏，书签栏，前进后退按钮等部分的工作。还负责处理浏览器网络请求和文件访问。</p></li><li><p><strong>它里面有哪些线程？</strong></p><ul><li>UI thread: 控制浏览器上的按钮及输入框</li><li>network thread: 处理网络请求，从网上获取数据</li><li>storage thread: 控制文件等的访问</li></ul></li></ul><div class="custom-container tip"><p class="custom-container-title">总结</p><p>当在浏览器中输入文字，<code>UI thread</code>需要判断用户输入的是<code>URL</code>还是<code>query</code>。</p><p>当点击回车键，<code>UI thread</code>通知<code>network thread</code>获取页面内容，并控制tab显示加载中。</p><p><code>network thread</code>会执行<code>DNS</code>查询，随后为请求建立<code>TLS连接</code>。</p><p>当请求响应返回的时候，<code>network thread</code>会判断响应状态，执行对应的操作。如果响应内容的格式是HTML，下一步会交给<code>Renderer Process</code>处理。</p><p><code>Browser Process</code>会给<code>Renderer Process</code>发送 <code>IPC</code> 消息来确认导航，一旦 <code>Browser Process</code> 收到 <code>Renderer Process</code> 的渲染确认消息，导航过程结束，页面加载过程开始。</p></div><h2 id="渲染进程-renderer-process" tabindex="-1"><a class="header-anchor" href="#渲染进程-renderer-process" aria-hidden="true">#</a> 渲染进程 （Renderer Process）</h2><ul><li><p><strong>它负责什么？</strong></p><p>渲染进程几乎负责 Tab 内的所有事情，渲染进程的核心目的在于转换 HTML、CSS、JS 为用户可交互的 web 页面。</p></li><li><p><strong>它里面有哪些线程？</strong></p><ul><li>主线程 Main thread</li><li>工作线程 Worker thread</li><li>排版线程 Compositor thread</li><li>光栅线程 Raster thread</li></ul></li><li><p><strong>渲染流程是什么样的？</strong></p><ol><li><p>构建<code>DOM</code>。解析文本字符串为<code>DOM</code>。</p></li><li><p>加载次级的资源。资源请求会传递给<code>Browser process</code>中的<code>network thread</code>进行相关资源的下载。</p></li><li><p>JS 的下载与执行。当遇到 <code>&lt;script&gt;</code> 标签时，渲染进程会停止解析 HTML，而去加载，解析和执行 JS 代码。</p></li><li><p>样式计算。解析 CSS 获取每一个节点的最终的计算样式值。</p></li><li><p>获取布局。通过遍历 DOM 及相关元素的计算样式，找到所有元素的几何关系，构建出布局树。</p></li><li><p>绘制各元素。</p></li><li><p>合成帧。先分层，再组合成帧。合成帧会被传递给 <code>GPU进程</code> 用以展示在屏幕上，优点是非常流畅。</p></li></ol></li></ul><h2 id="浏览器对事件的处理" tabindex="-1"><a class="header-anchor" href="#浏览器对事件的处理" aria-hidden="true">#</a> 浏览器对事件的处理</h2><p>在浏览器看来，用户的所有手势都是输入，鼠标滚动，悬置，点击等等都是输入。</p><p>事件发生时，<code>浏览器进程</code>会发送事件类型及相应的坐标给<code>渲染进程</code>，<code>渲染进程</code>随后找到事件对象并执行所有绑定在其上的相关事件处理函数。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',15),d={href:"https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/#Introduction",target:"_blank",rel:"noopener noreferrer"},s=(0,l.Uk)("浏览器的工作原理：新式网络浏览器幕后揭秘"),i={href:"https://zhuanlan.zhihu.com/p/47407398",target:"_blank",rel:"noopener noreferrer"},t=(0,l.Uk)("图解浏览器的基本工作原理"),a={render:function(e,r){const o=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[c,(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("p",null,[(0,l.Wm)("a",d,[s,(0,l.Wm)(o)])])]),(0,l.Wm)("li",null,[(0,l.Wm)("p",null,[(0,l.Wm)("a",i,[t,(0,l.Wm)(o)])])])])],64)}}}}]);