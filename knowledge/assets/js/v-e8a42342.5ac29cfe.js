"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[6154],{1748:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-e8a42342",path:"/web-developer/front-end/engineering/nvm.html",title:"nvm",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"常用命令",slug:"常用命令",children:[]},{level:2,title:"tnvm",slug:"tnvm",children:[]}],filePathRelative:"web-developer/front-end/engineering/nvm.md",git:{updatedTime:1648447584e3,contributors:[{name:"黎聪",email:"licong23@xdf.cn",commits:1}]}}},8661:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var e=a(6252);const t=(0,e.uE)('<h1 id="nvm" tabindex="-1"><a class="header-anchor" href="#nvm" aria-hidden="true">#</a> nvm</h1><p>node包管理工具，可以用vnm来管理node版本</p><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>nvm <span class="token function">install</span> stable <span class="token comment">## 安装最新稳定版 node</span>\nnvm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 安装指定版本</span>\nnvm uninstall <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 删除已安装的指定版本</span>\nnvm use <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 切换使用指定的版本node</span>\nnvm <span class="token function">ls</span> <span class="token comment">## 列出所有安装的版本</span>\nnvm ls-remote <span class="token comment">## 列出所有远程服务器的版本</span>\nnvm current <span class="token comment">## 显示当前的版本</span>\nnvm <span class="token builtin class-name">alias</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 给不同的版本号添加别名</span>\nnvm <span class="token builtin class-name">unalias</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token comment">## 删除已定义的别名</span>\nnvm reinstall-packages <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> <span class="token comment">## 在当前版本 node 环境下，重新   全局安装指定版本号的 npm 包</span>\nnvm <span class="token builtin class-name">alias</span> default <span class="token punctuation">[</span>node版本号<span class="token punctuation">]</span> <span class="token comment">##设置默认版本</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="tnvm" tabindex="-1"><a class="header-anchor" href="#tnvm" aria-hidden="true">#</a> tnvm</h2>',5),l={href:"https://github.com/aliyun-node/tnvm",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Uk)("github地址"),o=(0,e.Wm)("p",null,"tnvm是淘宝nodeJS的版本管理工具，它的功能和nvm差不多。",-1),r={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",l,[p,(0,e.Wm)(a)])])]),o],64)}}}}]);