"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[1755],{3139:(e,i,l)=>{l.r(i),l.d(i,{data:()=>a});const a={key:"v-41f975fc",path:"/web-developer/front-end/engineering/ci-cd.html",title:"CI/CD",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Github Actions",slug:"github-actions",children:[{level:3,title:"yaml 文件",slug:"yaml-文件",children:[]}]},{level:2,title:"Gitlab CI",slug:"gitlab-ci",children:[{level:3,title:"测试环境自动打包发布",slug:"测试环境自动打包发布",children:[]},{level:3,title:"Docker",slug:"docker",children:[]}]}],filePathRelative:"web-developer/front-end/engineering/ci-cd.md",git:{updatedTime:1683600236e3,contributors:[{name:"licong96",email:"licong19961204@gmail.com",commits:4}]}}},3085:(e,i,l)=>{l.r(i),l.d(i,{default:()=>p});var a=l(6252);const t=(0,a.Wm)("h1",{id:"ci-cd",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#ci-cd","aria-hidden":"true"},"#"),(0,a.Uk)(" CI/CD")],-1),n=(0,a.Wm)("p",null,"自动发布，自动化研发流程，提高研发效率，增加系统稳定性。",-1),r=(0,a.Wm)("p",null,"交付 + （版本控制系统 + 持续集成工具 + 部署工具）= 持续交付",-1),c=(0,a.Wm)("h2",{id:"github-actions",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#github-actions","aria-hidden":"true"},"#"),(0,a.Uk)(" Github Actions")],-1),d={href:"https://docs.github.com/zh/actions",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Uk)("文档"),h=(0,a.uE)('<p>GitHub Actions 是一种 CI/CD（持续集成/持续部署）服务，可帮助开发人员在 GitHub 存储库中设置和自动化工作流程。它们允许您在存储库内编写、测试和部署代码，以便在代码更改时自动执行工作流程。</p><p>还有一个选择是使用<code>Travis</code>，使用方式差不多</p><p>要使用 GitHub Actions，您需要在存储库中创建一个名为.github/workflows 的目录，并在其中创建一个 yaml 文件，其中定义了工作流程。</p><h3 id="yaml-文件" tabindex="-1"><a class="header-anchor" href="#yaml-文件" aria-hidden="true">#</a> yaml 文件</h3><h2 id="gitlab-ci" tabindex="-1"><a class="header-anchor" href="#gitlab-ci" aria-hidden="true">#</a> Gitlab CI</h2><ol><li><p>安装 <code>Gitlab Runner</code></p></li><li><p>配置 <code>Gitlab Runner</code></p></li><li><p>创建<code>.gitlab-ci.yml</code></p></li></ol><h3 id="测试环境自动打包发布" tabindex="-1"><a class="header-anchor" href="#测试环境自动打包发布" aria-hidden="true">#</a> 测试环境自动打包发布</h3><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h3>',8),u={href:"https://segmentfault.com/a/1190000010442764#articleHeader1",target:"_blank",rel:"noopener noreferrer"},s=(0,a.Uk)(".gitlab-ci.yml 配置"),m=(0,a.Wm)("p",null,"持续集成包含了拉代码、运行测试、编译代码、登录远程服务器，发布到第三方服务等等的操作，GitHub 将这些操作称为 actions。",-1),b={href:"http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html",target:"_blank",rel:"noopener noreferrer"},g=(0,a.Uk)("持续集成是什么？"),p={render:function(e,i){const l=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[t,n,r,c,(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[(0,a.Wm)("a",d,[o,(0,a.Wm)(l)])])]),h,(0,a.Wm)("p",null,[(0,a.Wm)("strong",null,[(0,a.Wm)("a",u,[s,(0,a.Wm)(l)])])]),m,(0,a.Wm)("p",null,[(0,a.Wm)("a",b,[g,(0,a.Wm)(l)])])],64)}}}}]);