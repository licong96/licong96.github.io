"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[5070],{7820:(n,e,s)=>{s.r(e),s.d(e,{data:()=>a});const a={key:"v-4e488ad9",path:"/web-developer/front-end/engineering/npm.html",title:"npm",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"常用命令",slug:"常用命令",children:[]},{level:2,title:"登录使用",slug:"登录使用",children:[]},{level:2,title:"查看配置",slug:"查看配置",children:[]},{level:2,title:"设置 npm 的 registry",slug:"设置-npm-的-registry",children:[]},{level:2,title:"查看线上 npm 包所有信息",slug:"查看线上-npm-包所有信息",children:[]},{level:2,title:"修改-g全局安装路径",slug:"修改-g全局安装路径",children:[]},{level:2,title:"npm link",slug:"npm-link",children:[{level:3,title:"连接本地脚手架",slug:"连接本地脚手架",children:[]},{level:3,title:"连接本地库文件",slug:"连接本地库文件",children:[]},{level:3,title:"取消连接本地库文件",slug:"取消连接本地库文件",children:[]}]},{level:2,title:"使用 npm 私库包",slug:"使用-npm-私库包",children:[{level:3,title:"1.全局安装的包",slug:"_1-全局安装的包",children:[]},{level:3,title:"2.本地使用的包",slug:"_2-本地使用的包",children:[]}]},{level:2,title:"发布包到 npm 私库",slug:"发布包到-npm-私库",children:[{level:3,title:"删除已经发布的包",slug:"删除已经发布的包",children:[]}]},{level:2,title:"npm init",slug:"npm-init",children:[]}],filePathRelative:"web-developer/front-end/engineering/npm.md",git:{updatedTime:1674894334e3,contributors:[{name:"licong96",email:"licong19961204@gmail.com",commits:4},{name:"黎聪",email:"licong23@xdf.cn",commits:1}]}}},9708:(n,e,s)=>{s.r(e),s.d(e,{default:()=>w});var a=s(6252);const l=(0,a.uE)('<h1 id="npm" tabindex="-1"><a class="header-anchor" href="#npm" aria-hidden="true">#</a> npm</h1><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><ul><li>清理缓存：<code>npm cache clean --force</code></li></ul><h2 id="登录使用" tabindex="-1"><a class="header-anchor" href="#登录使用" aria-hidden="true">#</a> 登录使用</h2><ul><li><p>登录：<code>npm login</code></p></li><li><p>显示登录用户名：<code>npm whoami</code></p></li></ul><h2 id="查看配置" tabindex="-1"><a class="header-anchor" href="#查看配置" aria-hidden="true">#</a> 查看配置</h2><p>显示基本配置：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm config list\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>显示所有配置：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm config ls -l\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>查看全局node包</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm root -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="设置-npm-的-registry" tabindex="-1"><a class="header-anchor" href="#设置-npm-的-registry" aria-hidden="true">#</a> 设置 npm 的 registry</h2><p>原 npm 地址：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm config set registry http://registry.npmjs.org\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="查看线上-npm-包所有信息" tabindex="-1"><a class="header-anchor" href="#查看线上-npm-包所有信息" aria-hidden="true">#</a> 查看线上 npm 包所有信息</h2><ul><li><p><code>npm api</code>接口地址：<code>https://registry.npmjs.org/&lt;packages&gt;</code></p></li><li><p>淘宝镜像接口地址：<code>https://registry.npmmirror.com/&lt;packages&gt;</code></p></li><li><p>返回json数据，里面有所有线上的版本信息</p></li></ul>',17),i=(0,a.Uk)("查看包文件版本信息："),r={href:"https://registry.npmjs.org/@lc-imooc-cli-dev/core",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("https://registry.npmjs.org/@lc-imooc-cli-dev/core"),p=(0,a.uE)('<h2 id="修改-g全局安装路径" tabindex="-1"><a class="header-anchor" href="#修改-g全局安装路径" aria-hidden="true">#</a> 修改<code>-g</code>全局安装路径</h2><p>查看当前路径</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm config ls\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>修改路径</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm config set prefix &quot;D:\\node&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="npm-link" tabindex="-1"><a class="header-anchor" href="#npm-link" aria-hidden="true">#</a> npm link</h2><p><strong>理解 npm link：</strong></p><ul><li>npm link：将当前项目链接到 node 全局 node_modules 中作为一个库文件，并解析 bin 配置创建可执行文件</li><li>npm link your-lib：将当前项目中 node_modules 下指定的库文件链接到 node 全局 node_modules 下的库文件</li></ul><p><strong>理解 npm unlink：</strong></p><ul><li>npm unlink：将当前项目从 node 全局 node_modules 中移除</li><li>npm unlink your-lib：将当前项目中的库文件依赖移除</li></ul><h3 id="连接本地脚手架" tabindex="-1"><a class="header-anchor" href="#连接本地脚手架" aria-hidden="true">#</a> 连接本地脚手架</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> your-cli-dir\n<span class="token function">npm</span> <span class="token function">link</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="连接本地库文件" tabindex="-1"><a class="header-anchor" href="#连接本地库文件" aria-hidden="true">#</a> 连接本地库文件</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> your-lib-dir\n<span class="token function">npm</span> <span class="token function">link</span>\n\n<span class="token builtin class-name">cd</span> your-cli-dir\n<span class="token function">npm</span> <span class="token function">link</span> your-lib\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="取消连接本地库文件" tabindex="-1"><a class="header-anchor" href="#取消连接本地库文件" aria-hidden="true">#</a> 取消连接本地库文件</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> your-lib-dir\n<span class="token function">npm</span> unlink\n\n<span class="token builtin class-name">cd</span> your-cli-dir\n\n<span class="token comment"># link存在</span>\n<span class="token function">npm</span> unlink your-lib\n\n<span class="token comment"># link不存在</span>\n<span class="token function">rm</span> -rf node_modules\n<span class="token function">npm</span> <span class="token function">install</span> -S your-lib\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="使用-npm-私库包" tabindex="-1"><a class="header-anchor" href="#使用-npm-私库包" aria-hidden="true">#</a> 使用 npm 私库包</h2><p>包分为两种：</p><ol><li>全局安装的包。比如<code>hzxdf-cli</code>脚手架工具。</li><li>本地使用的包。比如<code>@xdf/xpots</code>工具集。</li></ol><h3 id="_1-全局安装的包" tabindex="-1"><a class="header-anchor" href="#_1-全局安装的包" aria-hidden="true">#</a> 1.全局安装的包</h3><p>使用方法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> hzxdf-cli -g --registry http://localhost:8082/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>后面加上<code>--registry http://localhost:8082/</code>表示使用这个地址，去下载<code>hzxdf-cli</code>这个包。这种方法简单直接，且不会影响到全局<code>npm registry</code>的配置，但略显繁琐，推荐使用在只需一次安装的全局包上。</p><h3 id="_2-本地使用的包" tabindex="-1"><a class="header-anchor" href="#_2-本地使用的包" aria-hidden="true">#</a> 2.本地使用的包</h3><p>使用方法：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 需要在项目中添加一个`.npmrc`文件，文件内容是下面这行代码</span>\n\n@xdf:registry<span class="token operator">=</span>http://localhost:8082/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这行代码的目的也是设置<code>registry</code>，意思是所有<code>@xdf</code>这个组织下面的包，都到我们自己的<code>http://localhost:8082/</code>服务器上去下载。这种做法也不会影响到自己全局的<code>npm</code>配置。</p><p>添加<code>.npmrc</code>文件之后，后面的玩法都是一样的，使用<code>npm</code>或<code>yarn</code>安装需要的包到<code>package.json</code>文件中。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> <span class="token function">add</span> @xdf/xpots\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">重要</p><p><code>.npmrc</code>文件，需要和代码一起提交到<strong>GitLab</strong>上，因为<strong>CI/CD</strong>也需要使用到其中的配置，请不要在<code>.gitignore</code>中将它过滤掉。</p></div><h2 id="发布包到-npm-私库" tabindex="-1"><a class="header-anchor" href="#发布包到-npm-私库" aria-hidden="true">#</a> 发布包到 npm 私库</h2><blockquote><p>当你封装了一个好用的工具，想要分享给团队小伙伴时，你可以用到这个发布功能。</p></blockquote><p><strong>1. 对指定文件夹进行初始化。</strong>（如果已有可以省略这一步）</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> init --scope<span class="token operator">=</span>xdf\n\n<span class="token comment"># --scope=xdf 会在package.json的name属性中，自动添加@xdf组织名</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在这个文件中完成相关的功能代码。</p><p>注意配置好<code>package.json</code>中最重要的几个属性：</p><ul><li><code>name</code> 包的名称，使用<code>@xdf</code>开头</li><li><code>version</code> 包的版本</li><li><code>main</code> 包的入口文件</li></ul>',37),d=(0,a.Wm)("strong",null,[(0,a.Uk)("2.准备发布，需要设置"),(0,a.Wm)("code",null,"npm"),(0,a.Uk)("的"),(0,a.Wm)("code",null,"registry"),(0,a.Uk)("。")],-1),t=(0,a.Uk)("（推荐使用"),o=(0,a.Uk)("nrm"),m=(0,a.Uk)("管理本地"),u=(0,a.Wm)("code",null,"npm",-1),b=(0,a.Uk)("的"),h=(0,a.Wm)("code",null,"registry",-1),g=(0,a.Uk)("，方便任意切换。）"),v=(0,a.uE)('<p>先查看<code>npm</code>当前设置的<code>registry</code>是什么：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> config list\n\n<span class="token comment"># metrics-registry 就是当前指向的registry</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>修改成我们自己服务器的<code>registry</code>：（使用完之后，记得切回自己常用的 registry）</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token builtin class-name">set</span> registry http://localhost:8082/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>3. 修改好之后，去创建或验证用户：</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> adduser --scope<span class="token operator">=</span>xdf\n\n<span class="token comment"># --scope=xdf 的意思是进入xdf这个组织</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如果没有账户，会自动注册，只需取一个用户名，设一个密码和邮箱即可进入，没有过多的验证。</p><p><strong>4. 将当前这个包，发布到组织中：</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> publish --access<span class="token operator">=</span>public\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',9),k={class:"custom-container tip"},f=(0,a.Wm)("p",{class:"custom-container-title"},"发布成功后",-1),x=(0,a.Uk)("进入 "),y={href:"http://localhost:8082/",target:"_blank",rel:"noopener noreferrer"},W=(0,a.Uk)("http://localhost:8082/"),_=(0,a.Uk)(" 中查看你最新发布的包。"),U=(0,a.uE)('<h3 id="删除已经发布的包" tabindex="-1"><a class="header-anchor" href="#删除已经发布的包" aria-hidden="true">#</a> 删除已经发布的包</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> unpublish <span class="token operator">&lt;</span>package<span class="token operator">&gt;</span> --force\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="npm-init" tabindex="-1"><a class="header-anchor" href="#npm-init" aria-hidden="true">#</a> npm init</h2><p>直接使用<code>npm init &lt;name&gt;</code>创建自己的项目。</p><p>比如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm init egg\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>需要再npm中创建了一个<code>create-egg</code>项目。</p>',7),w={render:function(n,e){const s=(0,a.up)("OutboundLink"),w=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,(0,a.Wm)("p",null,[i,(0,a.Wm)("a",r,[c,(0,a.Wm)(s)])]),p,(0,a.Wm)("p",null,[d,t,(0,a.Wm)(w,{to:"/web-developer/front-end/engineering/nrm.html"},{default:(0,a.w5)((()=>[o])),_:1}),m,u,b,h,g]),v,(0,a.Wm)("div",k,[f,(0,a.Wm)("p",null,[x,(0,a.Wm)("a",y,[W,(0,a.Wm)(s)]),_])]),U],64)}}}}]);