"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[6522],{199:(e,a,l)=>{l.r(a),l.d(a,{data:()=>i});const i={key:"v-7734bf31",path:"/web-developer/back-end/java/design-mode.html",title:"设计模式",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"设计模式的分类",slug:"设计模式的分类",children:[]},{level:2,title:"工厂模式",slug:"工厂模式",children:[]}],filePathRelative:"web-developer/back-end/java/design-mode.md",git:{updatedTime:1690944334e3,contributors:[{name:"licong96",email:"licong19961204@gmail.com",commits:1}]}}},1833:(e,a,l)=>{l.r(a),l.d(a,{default:()=>d});const i=(0,l(6252).uE)('<h1 id="设计模式" tabindex="-1"><a class="header-anchor" href="#设计模式" aria-hidden="true">#</a> 设计模式</h1><p>设计模式是前辈总结的设计经验，主要为面向对象语言服务。</p><p>设计模式的目标是提高代码的可复用性、代码的可读性和代码的可靠性。</p><h2 id="设计模式的分类" tabindex="-1"><a class="header-anchor" href="#设计模式的分类" aria-hidden="true">#</a> 设计模式的分类</h2><ul><li>创建型模式</li><li>结构型模式</li><li>行为型模式</li></ul><h2 id="工厂模式" tabindex="-1"><a class="header-anchor" href="#工厂模式" aria-hidden="true">#</a> 工厂模式</h2><blockquote><p>属于创建型模式</p></blockquote><ul><li>用于隐藏创建对象的细节</li></ul>',8),d={render:function(e,a){return i}}}}]);