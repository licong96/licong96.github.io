"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[3802],{5317:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-7d58a366",path:"/web-developer/back-end/server/pm2.html",title:"PM2",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"配置环境变量",slug:"配置环境变量",children:[]},{level:2,title:"介绍",slug:"介绍",children:[]},{level:2,title:"配置和使用",slug:"配置和使用",children:[{level:3,title:"启动服务",slug:"启动服务",children:[]},{level:3,title:"常用命令",slug:"常用命令",children:[]},{level:3,title:"日志",slug:"日志",children:[]},{level:3,title:"配置",slug:"配置",children:[]}]},{level:2,title:"多进程模型",slug:"多进程模型",children:[]}],filePathRelative:"web-developer/back-end/server/pm2.md",git:{updatedTime:1679291328e3,contributors:[{name:"黎聪",email:"licong23@xdf.cn",commits:2},{name:"licong23@xdf.cn",email:"licong23@xdf.cn",commits:1},{name:"licong96",email:"licong19961204@gmail.com",commits:1}]}}},4665:(n,a,s)=>{s.r(a),s.d(a,{default:()=>c});var e=s(6252);const l=(0,e.Wm)("h1",{id:"pm2",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#pm2","aria-hidden":"true"},"#"),(0,e.Uk)(" PM2")],-1),t=(0,e.Uk)("官网："),o={href:"https://pm2.keymetrics.io/docs/usage/quick-start/",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Uk)("https://pm2.keymetrics.io/docs/usage/quick-start/"),i=(0,e.uE)('<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> pm2 -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="配置环境变量" tabindex="-1"><a class="header-anchor" href="#配置环境变量" aria-hidden="true">#</a> 配置环境变量</h2><p>问题：pm2 不是内部或外部命令也不是可运行的程序</p><p>先试试重启电脑。</p><ol><li>查看 npm 全局包安装位置</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>npm root -g\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li><p>打开环境变量，在 Path 中添加环境变量，只需要配置到 node 下的 node_global 即可</p></li><li><p>重启电脑</p></li></ol><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><ul><li>nodejs 进程管理工具</li><li>守护进程：服务挂掉之后自动重启</li><li>多进程：更好的利用 CPU 和内存</li></ul><h2 id="配置和使用" tabindex="-1"><a class="header-anchor" href="#配置和使用" aria-hidden="true">#</a> 配置和使用</h2><ul><li>启动服务</li><li>常用命令</li><li>配置</li></ul><h3 id="启动服务" tabindex="-1"><a class="header-anchor" href="#启动服务" aria-hidden="true">#</a> 启动服务</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pm2 start <span class="token punctuation">[</span>name<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>启动后的字段说明：</strong></p><ul><li><code>name</code>: 系统名称</li><li><code>pid</code>: 操作系统分配的 ID</li><li><code>restart</code>: 重启次数</li><li><code>status</code>: 状态；<code>online</code>是在线</li><li><code>mem</code>: 占用的内存</li><li><code>watching</code>: 是否监听代码变化自动重启</li></ul><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h3><ul><li>查看 <code>pm2 list</code></li><li>运行 <code>pm2 start [name]</code></li><li>重启 <code>pm2 restart [name]</code></li><li>停止 <code>pm2 stop [name]</code></li><li>删除 <code>pm2 delete [name]</code></li><li>信息 <code>pm2 info [name]</code></li><li>日志 <code>pm2 log [name]</code></li><li>监控 <code>pm2 monit [name]</code></li></ul><h3 id="日志" tabindex="-1"><a class="header-anchor" href="#日志" aria-hidden="true">#</a> 日志</h3><p>使用<code>pm2</code>启动之后，先查看<code>log</code>信息，能看到是否有问题。再使用<code>netstat -ntlp</code>查看端口号是否启动成功。</p><p>log 文件在<code>/.pm2/logs</code>下面。</p><h4 id="日志拆分" tabindex="-1"><a class="header-anchor" href="#日志拆分" aria-hidden="true">#</a> 日志拆分</h4><ul><li>pm2-logrotate</li></ul><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><ol><li>在项目中新建<code>pm2.conf.json</code>文件</li><li>配置文件内容</li></ol><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;apps&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;weibo&quot;</span><span class="token punctuation">,</span> <span class="token comment">//  系统名称</span>\n    <span class="token property">&quot;script&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bin/www&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;watch&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 文件变化自动重启</span>\n    <span class="token property">&quot;ignore_watch&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token comment">// 过滤这些的变化</span>\n      <span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;logs&quot;</span><span class="token punctuation">,</span>\n      <span class="token string">&quot;uploadFiles&quot;</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;instances&quot;</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token comment">// 进程数量，CPU是几核就写几</span>\n    <span class="token property">&quot;error_file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./logs/err.log&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;out_file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./logs/out.log&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;log_date_format&quot;</span><span class="token operator">:</span> <span class="token string">&quot;YYYY-MM-DD HH:mm:ss&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ol start="3"><li>通过配置文件启动项目</li></ol><h2 id="多进程模型" tabindex="-1"><a class="header-anchor" href="#多进程模型" aria-hidden="true">#</a> 多进程模型</h2><ul><li>操作系统会限制一个进程的最大可用内存，设置多个进程，可以更有效的发挥 CPU 的功效。</li><li>进程之间无法通行，因此<code>redis</code>和<code>mysql</code>要用统一的服务</li></ul>',29),c={render:function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,(0,e.Wm)("p",null,[t,(0,e.Wm)("a",o,[p,(0,e.Wm)(s)])]),i],64)}}}}]);