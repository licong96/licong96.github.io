"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[351],{1908:(e,n,l)=>{l.r(n),l.d(n,{data:()=>a});const a={key:"v-09576d30",path:"/web-developer/back-end/server/nginx.html",title:"Nginx",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"安装",slug:"安装",children:[]},{level:2,title:"配置",slug:"配置",children:[{level:3,title:"History 模式",slug:"history-模式",children:[]},{level:3,title:"Node 服务器",slug:"node-服务器",children:[]}]},{level:2,title:"常用命令",slug:"常用命令",children:[]},{level:2,title:"Mac 系统",slug:"mac-系统",children:[{level:3,title:"查看是否启动成功",slug:"查看是否启动成功",children:[]},{level:3,title:"停止进程",slug:"停止进程",children:[]}]},{level:2,title:"日志",slug:"日志",children:[{level:3,title:"日志拆分",slug:"日志拆分",children:[]}]}],filePathRelative:"web-developer/back-end/server/nginx.md",git:{updatedTime:1679291328e3,contributors:[{name:"licong96",email:"licong19961204@gmail.com",commits:4},{name:"黎聪",email:"licong23@xdf.cn",commits:1}]}}},4956:(e,n,l)=>{l.r(n),l.d(n,{default:()=>o});var a=l(6252);const i=(0,a.Wm)("h1",{id:"nginx",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#nginx","aria-hidden":"true"},"#"),(0,a.Uk)(" Nginx")],-1),s=(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,"必备的 web 服务器，稳定和高性能，开源免费"),(0,a.Wm)("li",null,"一般用于做静态服务、负载均衡"),(0,a.Wm)("li",null,"反向代理（对客服端不可见的代理）")],-1),r=(0,a.Wm)("h2",{id:"安装",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),(0,a.Uk)(" 安装")],-1),d={href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"},t=(0,a.Uk)("官网下载"),c=(0,a.uE)('<h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p><strong>反向代理配置：</strong></p><p>配置文件路径: <code>nginx-1.20.1 &gt; conf &gt; nginx.conf</code></p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>server {\n\tlisten       80;\n\tserver_name  localhost;\n\n\tlocation / {\n\t\tproxy_pass \thttp://localhost:8084;\n\t}\n\n\tlocation /api/ {\n\t\tproxy_pass \thttp://localhost:8000;\n\t\tproxy_set_header \tHost \t$host;\n\t}\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">注意端口</p><p>Nginx 服务运行之后默认监听的端口是<code>80</code>，客户端所有请求都先到 Nginx 服务，再去请求静态资源文件，或者反向代理到其它服务上。</p><p>其它服务都只在内部运行，端口号不对外开放，对外开放的只有 Nginx 的<code>80</code>端口，这样更加安全。</p></div><h3 id="history-模式" tabindex="-1"><a class="header-anchor" href="#history-模式" aria-hidden="true">#</a> History 模式</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>location /projectName {\n  try_files $uri $uri/ /projectName/index.html;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="node-服务器" tabindex="-1"><a class="header-anchor" href="#node-服务器" aria-hidden="true">#</a> Node 服务器</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>location ^~/node/ {\n\tproxy_pass http://localhost:7001/;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><p>MAC:</p><ul><li><code>sudo nginx -t</code>: 测试配置文件格式是否正确</li><li><code>sudo nginx</code>: 启动</li><li><code>sudo nginx -s reload</code>: 重启</li><li><code>sudo nginx -s stop</code>: 停止</li></ul><p>Window:</p><ul><li><code>start nginx</code>: 启动</li><li><code>nginx.exe -s reload</code>: 重启</li><li><code>nginx.exe -s stop</code>: 停止</li><li><code>taskkill /IM nginx.exe /F</code>: 关闭所有程序</li></ul><h2 id="mac-系统" tabindex="-1"><a class="header-anchor" href="#mac-系统" aria-hidden="true">#</a> Mac 系统</h2><ul><li><p>查找安装路径：<code>which nginx</code></p></li><li><p>安装路径：<code>/usr/local/bin/nginx</code></p></li><li><p>配置文件路径：<code>/usr/local/etc/nginx/nginx.conf</code></p></li><li><p>静态页面地址：<code>/usr/local/var/www</code></p></li></ul><h3 id="查看是否启动成功" tabindex="-1"><a class="header-anchor" href="#查看是否启动成功" aria-hidden="true">#</a> 查看是否启动成功</h3><p><code>ps -ef|grep nginx</code></p><h3 id="停止进程" tabindex="-1"><a class="header-anchor" href="#停止进程" aria-hidden="true">#</a> 停止进程</h3><p><code>sudo kill -QUIT [id]</code></p><h2 id="日志" tabindex="-1"><a class="header-anchor" href="#日志" aria-hidden="true">#</a> 日志</h2><h3 id="日志拆分" tabindex="-1"><a class="header-anchor" href="#日志拆分" aria-hidden="true">#</a> 日志拆分</h3><ul><li>logrotate</li></ul>',23),o={render:function(e,n){const l=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[i,s,r,(0,a.Wm)("p",null,[(0,a.Wm)("a",d,[t,(0,a.Wm)(l)])]),c],64)}}}}]);