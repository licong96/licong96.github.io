"use strict";(self.webpackChunkknowledge=self.webpackChunkknowledge||[]).push([[2727],{1867:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-44915271",path:"/web-developer/front-end/javascript/RregExp.html",title:"常用正则",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"验证手机号",slug:"验证手机号",children:[]},{level:3,title:"验证邮箱号",slug:"验证邮箱号",children:[]}],filePathRelative:"web-developer/front-end/javascript/RregExp.md",git:{updatedTime:1646300916e3,contributors:[{name:"黎聪",email:"licong23@xdf.cn",commits:1}]}}},8768:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="常用正则" tabindex="-1"><a class="header-anchor" href="#常用正则" aria-hidden="true">#</a> 常用正则</h1><h3 id="验证手机号" tabindex="-1"><a class="header-anchor" href="#验证手机号" aria-hidden="true">#</a> 验证手机号</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1(3|4|5|6|7|8|9)\\d{9}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>phone<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">&quot;请输入正确的手机号&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="验证邮箱号" tabindex="-1"><a class="header-anchor" href="#验证邮箱号" aria-hidden="true">#</a> 验证邮箱号</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>mail<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">&quot;邮箱格式不正确&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',5),t={render:function(n,s){return e}}}}]);